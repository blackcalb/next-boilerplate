generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?         @unique
  password      String?
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
 
model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
}
 
model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
 
model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String
  expires    DateTime
 
  @@unique([identifier, token])
}

type RecordsAmount {
  currency String
  value    Int
}

model Accounts {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  balance  Float
  currency String
  name     String
  userId     String        @db.ObjectId
}

model Budgets {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  budget      Int
  categoryIds String[]
  from        DateTime @db.Date
  name        String
  to          DateTime @db.Date
  used        Int
  userId     String        @db.ObjectId
}

model Categories {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  type String
  userId     String        @db.ObjectId
}

model Records {
  id         String        @id @default(auto()) @map("_id") @db.ObjectId
  accountId  String        @db.ObjectId
  amount     RecordsAmount
  categoryId String?       @db.ObjectId
  date       DateTime      @db.Date
  subject    String
  type       String
  userId     String        @db.ObjectId
}